---
name: behave

on:
  push:
    tags-ignore:
      - "**"
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  shipwright-tests:
    name: Shipwright System Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.SHIPTOKEN }}
      - uses: helm/kind-action@v1.2.0
        with:
          version: v0.14.0
          cluster_name: kind
          wait: 120s
      - uses: otaviof/setup-shipwright@v0

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Test Dependencies
        run: |
          make pip-install
      
      - name: Install CRDA
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          crda: "latest"
          github_path: ${{ github.token }}

      - name: Unit Tests
        run: |
          make test

      - name: Shipwright System Tests
        run: |
          make behave
      
      - name: CRDA Scan
        id: scan
        uses: redhat-actions/crda@v1
        with:
          manifest_file: requirements.txt
          crda_key: ${{ secrets.CRDA_KEY }}
          # snyk_token: ${{ secrets.SNYK_TOKEN }}
          fail_on: never
      
      - name: Print JSON analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_json }}
        run: cat ${{ steps.scan.outputs.crda_report_json }}

      - name: Print SARIF analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_sarif }}
        run: cat ${{ steps.scan.outputs.crda_report_sarif }}

      - name: Print Report Link
        run: echo ${{ steps.scan.outputs.report_link }}

      - name: Print Artifact Name
        run: echo ${{ steps.scan.outputs.artifact_name }}
  
      - name: Print JSON analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_json }}
        run: cat ${{ steps.scan.outputs.crda_report_json }}

      - name: Print SARIF analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_sarif }}
        run: cat ${{ steps.scan.outputs.crda_report_sarif }}

      - name: Print Report Link
        run: echo ${{ steps.scan.outputs.report_link }}

      - name: Print Artifact Name
        run: echo ${{ steps.scan.outputs.artifact_name }}